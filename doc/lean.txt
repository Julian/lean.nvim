================================================================================
                                                                     *lean.nvim*

lean.nvim is a plugin providing Neovim support for the Lean interactive theorem
prover, developed by Leonardo de Moura at Microsoft Research.

To find out more, see https://github.com/Julian/lean.nvim.

lean.setup({opts})                                              *lean.setup()*
    Setup function to be run in your init.lua (or init.vim).


    Parameters: ~
        {opts} (table)  Configuration options


lean.is_lean_buffer()                                  *lean.is_lean_buffer()*
    Is the current buffer a lean buffer?



lean.current_search_paths()                      *lean.current_search_paths()*
    Return the current Lean search path.

    Includes both the Lean core libraries as well as project-specific
    directories.




================================================================================
                                                            *lean.abbreviations*

Support for abbreviations (unicode character replacement).

abbreviations.load()                                    *abbreviations.load()*
    Load the Lean abbreviations as a Lua table.



abbreviations.reverse_lookup()                *abbreviations.reverse_lookup()*
    Retrieve the table of abbreviations that would produce the given symbol.



abbreviations.show_reverse_lookup()      *abbreviations.show_reverse_lookup()*
    Show a preview window with the reverse-lookup of the current character.




================================================================================
Support for `:checkhealth` for lean.nvim.

health.check()                                                *health.check()*
    Check whether lean.nvim is healthy.

    Call me via `:checkhealth lean`.




================================================================================
infoview.get_current_infoview()              *infoview.get_current_infoview()*
    Get the infoview corresponding to the current window.



infoview.close_all()                                    *infoview.close_all()*
    Close all open infoviews (across all tabs).



infoview.enable()                                          *infoview.enable()*
    Enable and open the infoview across all Lean buffers.



infoview.set_autoopen()                              *infoview.set_autoopen()*
    Set whether a new infoview is automatically opened when entering Lean
    buffers.



infoview.set_autoclose()                            *infoview.set_autoclose()*
    Set whether an infoview is automatically closed when leaving from its last
    associated Lean file.




================================================================================
                                                      *lean.infoview.components*

Infoview components which can be assembled to show various information about
the current Lean module or state.

components.goal({goal})                                    *components.goal()*
    The current (tactic) goal state.


    Parameters: ~
        {goal} (table)  a Lean4 `plainGoal` LSP response


components.term_goal({term_goal})                     *components.term_goal()*
    The current (term) goal state.


    Parameters: ~
        {term_goal} (table)  a Lean4 `plainTermGoal` LSP response


components.diagnostics()                            *components.diagnostics()*
    Diagnostic information for the current line from the Lean server.




================================================================================

================================================================================
sorry.fill()                                                    *sorry.fill()*
    Fill the current cursor position with `sorry`s to discharge all goals.

    I.e., given 3 current goals, with 2 in front of the cursor, will insert: {
    foo },<cursor> { sorry }, { sorry },




================================================================================
trythis.swap()                                                *trythis.swap()*
    Swap the first suggestion from Lean with the word under the cursor.



trythis.trim_unnecessary_mode_switching()*trythis.trim_unnecessary_mode_switching()*
    Trim unnecessary switching between tactic and term modes.




 vim:tw=78:ts=8:ft=help:norl:
