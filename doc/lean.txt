================================================================================
                                                                     *lean.nvim*

lean.nvim is a plugin providing Neovim support for the Lean interactive theorem
prover, developed by Leonardo de Moura at Microsoft Research.

To find out more, see https://github.com/Julian/lean.nvim.

lean.setup({opts})                                              *lean.setup()*
    Setup function to be run in your init.lua (or init.vim).


    Parameters: ~
        {opts} (table)  Configuration options



================================================================================
                                                            *lean.abbreviations*

Support for abbreviations (unicode character replacement).

abbreviations.load()                                    *abbreviations.load()*
    Load the Lean abbreviations as a Lua table.



abbreviations.reverse_lookup()                *abbreviations.reverse_lookup()*
    Retrieve the table of abbreviations that would produce the given symbol.



abbreviations.show_reverse_lookup()      *abbreviations.show_reverse_lookup()*
    Show a preview window with the reverse-lookup of the current character.




================================================================================
infoview.get_info_lines()                          *infoview.get_info_lines()*
    Retrieve the current combined contents of the infoview as a string.



infoview.is_empty()                                      *infoview.is_empty()*
    Is the infoview not showing anything?




================================================================================
                                                      *lean.infoview.components*

Infoview components which can be assembled to show various information about
the current Lean module or state.

components.goal({goal})                                    *components.goal()*
    The current (tactic) goal state.


    Parameters: ~
        {goal} (table)  a Lean4 `plainGoal` LSP response


components.term_goal({term_goal})                     *components.term_goal()*
    The current (term) goal state.


    Parameters: ~
        {term_goal} (table)  a Lean4 `plainTermGoal` LSP response


components.diagnostics()                            *components.diagnostics()*
    Diagnostic information for the current line from the Lean server.




================================================================================
lean3.init()                                                    *lean3.init()*
    Force a buffer to be treated as Lean 3.



lean3.lsp.enable({opts})                                  *lean3.lsp.enable()*
    Enable the Lean 3 LSP. Generally called by enabling the `lsp3` section in
    the configuration passed to `lean.setup`.


    Parameters: ~
        {opts} (table)  configuration options for the `lean3ls` language server

    Fields: ~
        {extra_argv} (table)  additional command line options to pass to
                              `lean-language-server`



================================================================================
sorry.fill()                                                    *sorry.fill()*
    Fill the current cursor position with `sorry`s to discharge all goals.




================================================================================
trythis.swap()                                                *trythis.swap()*
    Swap the first suggestion from Lean with the word under the cursor.



trythis.trim_unnecessary_mode_switching()*trythis.trim_unnecessary_mode_switching()*
    Trim unnecessary switching between tactic and term modes.




 vim:tw=78:ts=8:ft=help:norl:
